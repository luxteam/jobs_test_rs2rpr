source convertRS2RPR.mel;

global proc rpr_render(string $scene){{

	optionVar -rm "RPR_DevicesSelected";
	optionVar -iva "RPR_DevicesSelected" 1;

	fireRender -waitForItTwo;
	renderIntoNewWindow render;
	sysFile -makeDir ("{work_dir}" + "/Color");
	string $ff = "{work_dir}" + "/Color/converted_" + $scene;
	renderWindowEditor -edit  -dst "color" renderView;
	renderWindowEditor -edit -com -writeImage $ff renderView;
}}

global proc prerender(string $scene, int $rpr_iter){{

	string $scene_name  = `file -q -sn -shn`;
	print ("Processing: " + $scene_name + "\n");
	if ($scene_name != $scene) {{
		if (catch (`file -f -options "v=0;"  -ignoreVersion -o $scene`) == "1") {{
            evalDeferred("quit -abort");
        }}
	}}

	if( `pluginInfo -query -loaded RadeonProRender` == 0){{
        loadPlugin RadeonProRender;
    }}

    if( `pluginInfo -query -loaded redshift4maya` == 0){{
        loadPlugin redshift4maya;
    }}

    auto_launch();
    print "Conversion finished.\n";

	setAttr "defaultRenderGlobals.currentRenderer" -type "string" "FireRender";
	setAttr "defaultRenderGlobals.imageFormat" 8;
	setAttr "RadeonProRenderGlobals.completionCriteriaIterations" $rpr_iter;

	rpr_render($scene);
	print "Render finished.\n";

	string $render_device_name[] = `optionVar -q "RPR_DevicesName"`;

    string $filePath = "{work_dir}" + "/" + $scene + "_RPR.json";
	int $fileID = `fopen $filePath "a"`;
	fprint $fileID ("[");
	fprint $fileID ("\r\n {{");
	fprint $fileID ("\r\n  \"render_device\": \"" + $render_device_name[0] + "\",");
	fprint $fileID ("\r\n  \"tool\": \"Maya " + `about -version` + "\",");
	fprint $fileID ("\r\n  \"date_time\": \"" + `date -format "DD/MM/YYYY hh:mm:ss"` + "\",");
	fprint $fileID ("\r\n  \"render_version\": \"" + getRPRPluginVersion() + "\",");
	fprint $fileID ("\r\n  \"core_version\": \"" + getRprCoreVersion() + "\",");
	fprint $fileID ("\r\n  \"file_name\": \"" + "converted_" + $scene + ".jpg\",");
	fprint $fileID ("\r\n  \"render_color_path\": \"Color/converted_" + $scene + ".jpg\",");
	fprint $fileID ("\r\n  \"baseline_color_path\": \"Color/" + $scene + ".jpg\",");
	fprint $fileID ("\r\n  \"scene_name\": \"" + $scene + "\",");
	fprint $fileID ("\r\n  \"render_time\": 1,");
	fprint $fileID ("\r\n  \"test_case\": \"" + $scene + "\",");
	fprint $fileID ("\r\n  \"difference_color\": \"" + "not compared yet" + "\",");
	fprint $fileID ("\r\n  \"test_status\": \"" + "passed" + "\"");
	fprint $fileID ("\r\n }}");
	fprint $fileID ("\r\n]");
	fclose $fileID;

}}

global proc main(){{

	setProject ("{res_path}");

	// <-- fail -->

	// <-- start -->

    {tests}

    // <-- end -->

	evalDeferred("quit -abort");

}}


